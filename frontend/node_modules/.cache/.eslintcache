[{"/Users/dulkamith/Documents/Lab/client/src/index.js":"1","/Users/dulkamith/Documents/Lab/client/src/reportWebVitals.js":"2","/Users/dulkamith/Documents/Lab/client/src/App.js":"3","/Users/dulkamith/Documents/Lab/client/src/components/CreateReport.js":"4","/Users/dulkamith/Documents/Lab/client/src/components/EditReport.js":"5","/Users/dulkamith/Documents/Lab/client/src/components/Home.js":"6","/Users/dulkamith/Documents/Lab/client/src/components/ReportDetails.js":"7","/Users/dulkamith/Documents/Lab/client/src/components/NavBar.js":"8","/Users/dulkamith/Downloads/Lab-new/frontend/src/index.js":"9","/Users/dulkamith/Downloads/Lab-new/frontend/src/reportWebVitals.js":"10","/Users/dulkamith/Downloads/Lab-new/frontend/src/components/ReportDetails.js":"11","/Users/dulkamith/Downloads/Lab-new/frontend/src/components/CreateReport.js":"12","/Users/dulkamith/Downloads/Lab-new/frontend/src/components/EditReport.js":"13","/Users/dulkamith/Downloads/Lab-new/frontend/src/components/labHome.js":"14","/Users/dulkamith/Downloads/Lab-new/frontend/src/labApp.js":"15","/Users/dulkamith/Downloads/Lab-new/frontend/src/components/labNavBar.js":"16"},{"size":478,"mtime":1630869124963,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1630867823056,"results":"19","hashOfConfig":"18"},{"size":797,"mtime":1631362865324,"results":"20","hashOfConfig":"18"},{"size":5097,"mtime":1631347337901,"results":"21","hashOfConfig":"18"},{"size":5671,"mtime":1631347349242,"results":"22","hashOfConfig":"18"},{"size":4227,"mtime":1631362594026,"results":"23","hashOfConfig":"18"},{"size":3379,"mtime":1631360715479,"results":"24","hashOfConfig":"18"},{"size":463,"mtime":1631362874132,"results":"25","hashOfConfig":"18"},{"size":482,"mtime":1631396341886,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1630867823056,"results":"28","hashOfConfig":"27"},{"size":3379,"mtime":1631360715479,"results":"29","hashOfConfig":"27"},{"size":5097,"mtime":1631347337901,"results":"30","hashOfConfig":"27"},{"size":5675,"mtime":1631395006451,"results":"31","hashOfConfig":"27"},{"size":4230,"mtime":1631396238798,"results":"32","hashOfConfig":"27"},{"size":818,"mtime":1631397235130,"results":"33","hashOfConfig":"27"},{"size":470,"mtime":1631397163600,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"izc9hp",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18lfcoy",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dulkamith/Documents/Lab/client/src/index.js",[],["73","74"],"/Users/dulkamith/Documents/Lab/client/src/reportWebVitals.js",[],"/Users/dulkamith/Documents/Lab/client/src/App.js",[],"/Users/dulkamith/Documents/Lab/client/src/components/CreateReport.js",[],"/Users/dulkamith/Documents/Lab/client/src/components/EditReport.js",["75","76","77","78"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nexport default class EditReport extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            name:\"\",\n            nic:\"\",\n            age:\"\",\n            sex:\"\",\n            type:\"\",\n            result:\"\",\n            date:\"\",\n            status:\"\"\n        }\n    }\n\n    handleInputChange = (e) =>{\n        const {name,value} = e.target;\n\n        this.setState({\n            ...this.state,\n            [name]:value\n        })\n    }\n\n    onSubmit = (e) =>{\n\n        e.preventDefault();\n        const id = this.props.match.params.id;\n\n        const {name,nic,age,sex,type,result,date,status} = this.state;\n\n        const data = {\n            name:name,\n            nic:nic,\n            age:age,\n            sex:sex,\n            type:type,\n            result:result,\n            date:date,\n            status:status\n        }\n\n        console.log(data);\n\n        axios.put(`/lab/update/${id}`,data).then((res) =>{\n            if(res.data.success){\n                //alert(\"Report Updated Successfully !!\")\n\n               Swal.fire(\n                  'Updated!',\n                  'Report Updated Successfully !!',\n                  'success'\n                )\n\n\n                this.setState(\n                    {\n                        name:\"\",\n                         nic:\"\",\n                         age:\"\",\n                         sex:\"\",\n                        type:\"\",\n                         result:\"\",\n                         date:\"\",\n                        status:\"\"\n                    }\n                )\n            }\n        })\n\n    }\n\n\n    componentDidMount(){\n\n        const id = this.props.match.params.id;\n\n        axios.get(`/lab/${id}`).then((res) =>{\n            if(res.data.success){\n                this.setState({\n            name:res.data.lab.name,\n            nic:res.data.lab.nic,\n            age:res.data.lab.age,\n            sex:res.data.lab.sex,\n            type:res.data.lab.type,\n            result:res.data.lab.result,\n            date:res.data.lab.date,\n            status:res.data.lab.status\n                });\n\n                console.log(this.state.lab);\n                \n            }\n        });\n    }\n    \n    render() {\n        return (\n            //<div></div>\n            <div>\n\n<link href=\"https://fonts.googleapis.com/css?family=Montserrat:400,700\" rel=\"stylesheet\" />\n\n\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../css/labstyle.css\" />\n\n            <div id=\"lab\" class=\"section\">\n  <div class=\"section-center\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"lab-form\">\n          <div class=\"form-header\">\n            <h1>Update Report</h1>\n          </div>\n          <form>\n         \n            <form className=\"need-validation\" noValidate>\n              <form className=\"need-validation\" noValidate>\n  <div class=\"mb-3\">\n    <label for=\"name\" class=\"form-label\">Patient Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"name\"\n     value={this.state.name} onChange={this.handleInputChange} \n\n    /> \n  </div>\n  <div class=\"mb-3\">\n    <label for=\"nic\" class=\"form-label\">NIC</label>\n    <input type=\"text\" class=\"form-control\" name=\"nic\"\n     value={this.state.nic} onChange={this.handleInputChange} \n\n    /> \n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"age\" class=\"form-label\">Age</label>\n    <input type=\"number\" class=\"form-control\" name=\"age\"\n     value={this.state.age} onChange={this.handleInputChange} \n\n    /> \n  </div>\n\n<div>Sex</div>\n  <div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"sex\" id=\"male\"\n  value=\"Male\" onChange={this.handleInputChange}\n  checked={this.state.sex=='Male'}\n  />\n  <label class=\"form-check-label\" for=\"male\">\n    Male\n  </label>\n</div>\n<div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"sex\" id=\"female\" \n  value=\"Female\" onChange={this.handleInputChange}\n  checked={this.state.sex=='Female'}\n  />\n  <label class=\"form-check-label\" for=\"female\">\n    Female\n  </label>\n</div>\n\n  <div class=\"mb-3\">\n    <label for=\"type\" class=\"form-label\">Type</label>\n    <input type=\"text\" class=\"form-control\" name=\"type\"\n     value={this.state.type} onChange={this.handleInputChange} \n\n    /> \n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"result\" class=\"form-label\">Result</label>\n    <input type=\"text\" class=\"form-control\" name=\"result\"\n     value={this.state.result} onChange={this.handleInputChange} \n\n    /> \n  </div>\n\n  <div class=\"mb-3\">\n    <label for=\"date\" class=\"form-label\">Date</label>\n    <input type=\"date\" class=\"form-control\" name=\"date\"\n     value={this.state.date} onChange={this.handleInputChange} \n\n    />\n  </div>\n\n  <div>Status</div>\n  <div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"good\"\n   value=\"Good\" onChange={this.handleInputChange}\n   checked={this.state.status=='Good'}\n  />\n  <label class=\"form-check-label\" for=\"good\">\n    Good\n  </label>\n</div>\n<div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"bad\" \n  value=\"Bad\" onChange={this.handleInputChange}\n  checked={this.state.status=='Bad'}\n  />\n  <label class=\"form-check-label\" for=\"bad\">\n    Bad\n  </label>\n</div>\n\n<div>\n<button className=\"submit-btn\" type=\"submit\" style={{marginTop:'15px'}} onClick={this.onSubmit}>\n    <i className=\"far fa-check-squar\"></i>\n    &nbsp; Update\n</button>\n</div>\n</form> \n</form>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>              \n </div>\n        );\n    }\n}","/Users/dulkamith/Documents/Lab/client/src/components/Home.js",["79"],"import React, { Component } from \"react\";\nimport axios from 'axios'\nimport Swal from \"sweetalert2\";\n//import lab from \"../../models/lab\";\n\nexport default class Home extends Component {\n\nconstructor(props){\n  super(props);\nthis.state={\n  lab:[]\n};\n\n}\n\ncomponentDidMount(){\n  this.retriveReports();\n}\n\nretriveReports(){\n  axios.get(\"/lab\").then(res =>{\n\n  if(res.data.success){\n    this.setState({\n      lab:res.data.existingLab\n    });\n\n    console.log(this.state.lab)\n  }\n\n  });\n}\n\nonDelete = (id) => {\n    axios.delete(`/lab/delete/${id}`).then((res) =>{\n        //alert(\"Deleted Successfully !!\");\n\n        Swal.fire({\n          icon: 'error',\n          title: 'Deleted...',\n          text: 'Record Deleted Successfully !!',\n          \n        })\n        this.retriveReports();\n    })\n}\n\nfilterData(lab,searchKey){\n    const result = lab.filter((lab) =>\n    lab.name.toLowerCase().includes(searchKey) ||\n    lab.name.includes(searchKey) ||\n    lab.nic.toLowerCase().includes(searchKey) ||\n    lab.age.toLowerCase().includes(searchKey) ||\n    lab.sex.toLowerCase().includes(searchKey) ||\n    lab.sex.includes(searchKey) ||\n    lab.type.toLowerCase().includes(searchKey) ||\n    lab.type.includes(searchKey) ||\n    lab.result.toLowerCase().includes(searchKey) ||\n    lab.result.includes(searchKey) ||\n    lab.date.toLowerCase().includes(searchKey) ||\n    lab.status.toLowerCase().includes(searchKey) ||\n    lab.status.includes(searchKey)\n    )\n\n    this.setState({lab:result});\n\n}\n\n\nhandleSearchArea = (e) =>{\n   const searchKey = e.currentTarget.value;\n\n   axios.get(\"/lab\").then(res =>{\n\n    if(res.data.success){\n      this.filterData(res.data.existingLab,searchKey)\n    }\n  \n    });\n}\n  \n  render() {\n    return(\n      <div className=\"container\">\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"../css/labstyle.css\" />\n          <div className=\"row\">\n              <div className=\"col-lg-9 mt-2 mb-2\">\n                \n              </div>\n              <div className=\"col-lg-3 mt-2 mb-2\">\n                  <input \n                  className=\"form-control\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  name=\"searchQuery\"\n                  onChange={this.handleSearchArea}>\n\n                  </input>\n              </div>\n          </div>\n\n          <button className=\"btn btn-success\"><a href=\"/add\" style={{textDecoration:'none',color:'white'}}>Add New +</a></button>\n       \n        <table className=\"table\">\n        <thead>\n                <tr>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">NIC</th>\n                    <th scope=\"col\">Age</th>\n                    <th scope=\"col\">Sex</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Results</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n              {this.state.lab.map((lab,index) =>(\n                //<tr key={index}>\n                <tr>\n                  <th scope=\"row\">{index+1}</th>\n                    <td>\n                        <a href={`/lab/${lab._id}`} style={{textDecoration:'none'}}>\n                      {lab.name}\n                      </a>\n                    </td>\n                  <td>{lab.nic}</td>\n                  <td>{lab.age}</td>\n                  <td>{lab.sex}</td>\n                  <td>{lab.type}</td>\n                  <td>{lab.result}</td>\n                  <td>{lab.date}</td>\n                  <td>{lab.status}</td>\n                  <td>\n                    <a className=\"btn btn-warning\" href={`/edit/${lab._id}`}>\n                      <i className=\"fas fa-edit\"></i>&nbsp;Edit\n                    </a>\n                    &nbsp;\n                    <a className=\"btn btn-danger\" href=\"#\" onClick={() =>this.onDelete(lab._id)}>\n                      <i className=\"far fa-trash-alt\"></i>&nbsp;Delete\n                    </a>\n                    \n                  </td>\n                </tr>\n\n              ))}\n\n            </tbody>\n\n            </table>\n\n            \n\n      </div>\n    )\n  }\n}","/Users/dulkamith/Documents/Lab/client/src/components/ReportDetails.js",["80"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport jsPDF from 'jspdf';\n\nexport default class ReportDetails extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            lab:{}\n        };\n    }\n\n \n\n    componentDidMount(){\n\n        const id = this.props.match.params.id;\n\n        axios.get(`/lab/${id}`).then((res) =>{\n            if(res.data.success){\n                this.setState({\n                    lab:res.data.lab\n                });\n\n                console.log(this.state.lab);\n                \n            }\n        });\n    }\n\n    //jsPDF generator function\n    jsPDFGenerator = () =>{\n       //const id = this.props.match.params.id;\n        //const name = this.props.match.params.name;\n        //const name = this.props.match.params.name;\n        const {name,nic,age,sex,type,result,date,status} = this.state.lab;\n        \n        //new document in jspdf\n        var doc = new jsPDF('p','pt');\n\n        //add some text to pdf\n\n        //doc.addImage(\"/img/sakura_logo.png\", \"PNG\", 15,40,180,180)\n       \n        doc.text(200,40,`${type}   Report`)\n\n        doc.text(100,120,'Name')\n        doc.text(100,140,'NIC')\n        doc.text(100,160,'Age')\n        doc.text(100,180,'Sex')\n        doc.text(100,200,'Test Type')\n        doc.text(100,220,'Result')\n        doc.text(100,240,'Date')\n        doc.text(100,260,'Status')\n\n        doc.text(300,120,name)\n        doc.text(300,140,nic)\n        doc.text(300,160,age)\n        doc.text(300,180,sex)\n        doc.text(300,200,type)\n        doc.text(300,220,result)\n        doc.text(300,240,date)\n        doc.text(300,260,status)\n\n        //set the font for pdf\n        doc.setFont('courier');\n        doc.setFontSize(10);\n\n        //set the font type\n        //doc.setFontType('normal')\n\n        doc.text(150,400,'Tested by SAKURA Hospital Laboratory');\n\n        //Save the pdf\n        doc.save(`${nic}.pdf`)\n\n    }\n\n\n    \n    render() {\n\n        const {name,nic,age,sex,type,result,date,status} = this.state.lab;\n\n        return (\n            <div style={{marginTop:'30px'}}>\n                <link type=\"text/css\" rel=\"stylesheet\" href=\"../css/labstyle.css\" />\n          \n            <h4 className=\"reportH4\">{name}'s {type} Report</h4>\n            <hr/>\n\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">NIC</dt>\n                <dd className=\"col-sm-9\">{nic}</dd>\n\n                <dt className=\"col-sm-3\">Age</dt>\n                <dd className=\"col-sm-9\">{age}</dd>\n\n                <dt className=\"col-sm-3\">Sex</dt>\n                <dd className=\"col-sm-9\">{sex}</dd>\n\n                <dt className=\"col-sm-3\">Type</dt>\n                <dd className=\"col-sm-9\">{type}</dd>\n\n                <dt className=\"col-sm-3\">Result</dt>\n                <dd className=\"col-sm-9\">{result}</dd>\n\n                <dt className=\"col-sm-3\">Date</dt>\n                <dd className=\"col-sm-9\">{date}</dd>\n\n                <dt className=\"col-sm-3\">Status</dt>\n                <dd className=\"col-sm-9\">{status}</dd>\n\n            </dl>\n\n          \n            <a className=\"btn btn-success btn-lg btn-block\" href=\"#\" onClick={this.jsPDFGenerator}>\n                      <i className=\"fas fa-cogs\"></i>&nbsp;Generate Report\n                    </a>\n\n                    <hr/>\n                \n            </div>\n            \n            \n        );\n    }\n}","/Users/dulkamith/Documents/Lab/client/src/components/NavBar.js",[],"/Users/dulkamith/Downloads/Lab-new/frontend/src/index.js",[],"/Users/dulkamith/Downloads/Lab-new/frontend/src/reportWebVitals.js",[],["81","82"],"/Users/dulkamith/Downloads/Lab-new/frontend/src/components/ReportDetails.js",["83"],"/Users/dulkamith/Downloads/Lab-new/frontend/src/components/CreateReport.js",[],"/Users/dulkamith/Downloads/Lab-new/frontend/src/components/EditReport.js",[],"/Users/dulkamith/Downloads/Lab-new/frontend/src/components/labHome.js",["84"],"import React, { Component } from \"react\";\nimport axios from 'axios'\nimport Swal from \"sweetalert2\";\n//import lab from \"../../models/lab\";\n\nexport default class labHome extends Component {\n\nconstructor(props){\n  super(props);\nthis.state={\n  lab:[]\n};\n\n}\n\ncomponentDidMount(){\n  this.retriveReports();\n}\n\nretriveReports(){\n  axios.get(\"/lab\").then(res =>{\n\n  if(res.data.success){\n    this.setState({\n      lab:res.data.existingLab\n    });\n\n    console.log(this.state.lab)\n  }\n\n  });\n}\n\nonDelete = (id) => {\n    axios.delete(`/lab/delete/${id}`).then((res) =>{\n        //alert(\"Deleted Successfully !!\");\n\n        Swal.fire({\n          icon: 'error',\n          title: 'Deleted...',\n          text: 'Record Deleted Successfully !!',\n          \n        })\n        this.retriveReports();\n    })\n}\n\nfilterData(lab,searchKey){\n    const result = lab.filter((lab) =>\n    lab.name.toLowerCase().includes(searchKey) ||\n    lab.name.includes(searchKey) ||\n    lab.nic.toLowerCase().includes(searchKey) ||\n    lab.age.toLowerCase().includes(searchKey) ||\n    lab.sex.toLowerCase().includes(searchKey) ||\n    lab.sex.includes(searchKey) ||\n    lab.type.toLowerCase().includes(searchKey) ||\n    lab.type.includes(searchKey) ||\n    lab.result.toLowerCase().includes(searchKey) ||\n    lab.result.includes(searchKey) ||\n    lab.date.toLowerCase().includes(searchKey) ||\n    lab.status.toLowerCase().includes(searchKey) ||\n    lab.status.includes(searchKey)\n    )\n\n    this.setState({lab:result});\n\n}\n\n\nhandleSearchArea = (e) =>{\n   const searchKey = e.currentTarget.value;\n\n   axios.get(\"/lab\").then(res =>{\n\n    if(res.data.success){\n      this.filterData(res.data.existingLab,searchKey)\n    }\n  \n    });\n}\n  \n  render() {\n    return(\n      <div className=\"container\">\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"../css/labstyle.css\" />\n          <div className=\"row\">\n              <div className=\"col-lg-9 mt-2 mb-2\">\n                \n              </div>\n              <div className=\"col-lg-3 mt-2 mb-2\">\n                  <input \n                  className=\"form-control\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  name=\"searchQuery\"\n                  onChange={this.handleSearchArea}>\n\n                  </input>\n              </div>\n          </div>\n\n          <button className=\"btn btn-success\"><a href=\"/add\" style={{textDecoration:'none',color:'white'}}>Add New +</a></button>\n       \n        <table className=\"table\">\n        <thead>\n                <tr>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">NIC</th>\n                    <th scope=\"col\">Age</th>\n                    <th scope=\"col\">Sex</th>\n                    <th scope=\"col\">Type</th>\n                    <th scope=\"col\">Results</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n              {this.state.lab.map((lab,index) =>(\n                //<tr key={index}>\n                <tr>\n                  <th scope=\"row\">{index+1}</th>\n                    <td>\n                        <a href={`/lab/${lab._id}`} style={{textDecoration:'none'}}>\n                      {lab.name}\n                      </a>\n                    </td>\n                  <td>{lab.nic}</td>\n                  <td>{lab.age}</td>\n                  <td>{lab.sex}</td>\n                  <td>{lab.type}</td>\n                  <td>{lab.result}</td>\n                  <td>{lab.date}</td>\n                  <td>{lab.status}</td>\n                  <td>\n                    <a className=\"btn btn-warning\" href={`/edit/${lab._id}`}>\n                      <i className=\"fas fa-edit\"></i>&nbsp;Edit\n                    </a>\n                    &nbsp;\n                    <a className=\"btn btn-danger\" href=\"#\" onClick={() =>this.onDelete(lab._id)}>\n                      <i className=\"far fa-trash-alt\"></i>&nbsp;Delete\n                    </a>\n                    \n                  </td>\n                </tr>\n\n              ))}\n\n            </tbody>\n\n            </table>\n\n            \n\n      </div>\n    )\n  }\n}","/Users/dulkamith/Downloads/Lab-new/frontend/src/labApp.js",[],"/Users/dulkamith/Downloads/Lab-new/frontend/src/components/labNavBar.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":151,"column":26,"nodeType":"91","messageId":"92","endLine":151,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":160,"column":26,"nodeType":"91","messageId":"92","endLine":160,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":195,"column":30,"nodeType":"91","messageId":"92","endLine":195,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":204,"column":29,"nodeType":"91","messageId":"92","endLine":204,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":141,"column":21,"nodeType":"95","endLine":141,"endColumn":98},{"ruleId":"93","severity":1,"message":"94","line":119,"column":13,"nodeType":"95","endLine":119,"endColumn":100},{"ruleId":"85","replacedBy":"96"},{"ruleId":"87","replacedBy":"97"},{"ruleId":"93","severity":1,"message":"94","line":119,"column":13,"nodeType":"95","endLine":119,"endColumn":100},{"ruleId":"93","severity":1,"message":"94","line":141,"column":21,"nodeType":"95","endLine":141,"endColumn":98},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["98"],["99"],"no-global-assign","no-unsafe-negation"]